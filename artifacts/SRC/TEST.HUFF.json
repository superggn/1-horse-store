{
  "file": {
    "path": "src/test.huff",
    "source": "/* 接口 */\n#define function setValue(uint256) nonpayable returns ()\n#define function getValue() view returns (uint256)\n#define event ValueChanged(uint256 indexed)\n\n/* 存储槽位 */\n#define constant VALUE_LOCATION = FREE_STORAGE_POINTER()\n\n/* 方法 */\n#define macro SET_VALUE() = takes (0) returns (0) {\n    0x04 calldataload   // [value]\n    dup1                // [value, value]\n    [VALUE_LOCATION]    // [ptr, value, value]\n    sstore              // [value]\n    0xEF 0x00 mstore\n    // 释放事件\n    __EVENT_HASH(ValueChanged) // [sig, value]\n    0x20 push0         // [0, 0x20, sig, value]\n    log2\n    stop\n}\n\n#define macro GET_VALUE() = takes (0) returns (0) {\n    // 从存储中加载值\n    [VALUE_LOCATION]   // [ptr]\n    sload                // [value]\n\n    // 将值存入内存\n    0x00 mstore\n\n    // 返回值\n    0x20 0x00 return\n}\n\n// 合约的主入口，判断调用的是哪个函数\n#define macro MAIN() = takes (0) returns (0) {\n    // 通过selector判断要调用哪个函数\n    0x00 calldataload 0xE0 shr\n    dup1 __FUNC_SIG(setValue) eq set jumpi\n    dup1 __FUNC_SIG(getValue) eq get jumpi\n    // 如果没有匹配的函数，就revert\n    0x00 0x00 revert\n\n    set:\n        SET_VALUE()\n    get:\n        GET_VALUE()\n}",
    "access": null,
    "dependencies": []
  },
  "bytecode": "60588060093d393df35f3560e01c8063552410771461001e578063209652551461004f575f5ffd5b600435805f5560ef5f527f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c5960205fa2005b5f545f5260205ff3",
  "runtime": "5f3560e01c8063552410771461001e578063209652551461004f575f5ffd5b600435805f5560ef5f527f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c5960205fa2005b5f545f5260205ff3",
  "abi": {
    "constructor": null,
    "functions": {
      "getValue": {
        "name": "getValue",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "kind": {
              "Uint": 256
            },
            "internal_type": null
          }
        ],
        "constant": false,
        "state_mutability": "View"
      },
      "setValue": {
        "name": "setValue",
        "inputs": [
          {
            "name": "",
            "kind": {
              "Uint": 256
            },
            "internal_type": null
          }
        ],
        "outputs": [],
        "constant": false,
        "state_mutability": "NonPayable"
      }
    },
    "events": {
      "ValueChanged": {
        "name": "ValueChanged",
        "inputs": [
          {
            "name": "",
            "kind": {
              "Uint": 256
            },
            "indexed": true
          }
        ],
        "anonymous": false
      }
    },
    "errors": {},
    "receive": false,
    "fallback": false
  }
}